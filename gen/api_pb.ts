// @generated by protoc-gen-es v1.2.1 with parameter "target=ts"
// @generated from file api.proto (package buf.connect.demo.eliza.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message buf.connect.demo.eliza.v1.RenderOptions
 */
export class RenderOptions extends Message<RenderOptions> {
  /**
   * Whether the email output is beautified.
   *
   * @generated from field: bool pretty = 1;
   */
  pretty = false;

  constructor(data?: PartialMessage<RenderOptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.connect.demo.eliza.v1.RenderOptions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pretty", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RenderOptions {
    return new RenderOptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RenderOptions {
    return new RenderOptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RenderOptions {
    return new RenderOptions().fromJsonString(jsonString, options);
  }

  static equals(a: RenderOptions | PlainMessage<RenderOptions> | undefined, b: RenderOptions | PlainMessage<RenderOptions> | undefined): boolean {
    return proto3.util.equals(RenderOptions, a, b);
  }
}

/**
 * @generated from message buf.connect.demo.eliza.v1.WelcomeEmail
 */
export class WelcomeEmail extends Message<WelcomeEmail> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<WelcomeEmail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.connect.demo.eliza.v1.WelcomeEmail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WelcomeEmail {
    return new WelcomeEmail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WelcomeEmail {
    return new WelcomeEmail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WelcomeEmail {
    return new WelcomeEmail().fromJsonString(jsonString, options);
  }

  static equals(a: WelcomeEmail | PlainMessage<WelcomeEmail> | undefined, b: WelcomeEmail | PlainMessage<WelcomeEmail> | undefined): boolean {
    return proto3.util.equals(WelcomeEmail, a, b);
  }
}

/**
 * @generated from message buf.connect.demo.eliza.v1.CreateWelcomeEmailRequest
 */
export class CreateWelcomeEmailRequest extends Message<CreateWelcomeEmailRequest> {
  /**
   * @generated from field: buf.connect.demo.eliza.v1.RenderOptions options = 1;
   */
  options?: RenderOptions;

  /**
   * @generated from field: buf.connect.demo.eliza.v1.WelcomeEmail args = 2;
   */
  args?: WelcomeEmail;

  constructor(data?: PartialMessage<CreateWelcomeEmailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.connect.demo.eliza.v1.CreateWelcomeEmailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "options", kind: "message", T: RenderOptions },
    { no: 2, name: "args", kind: "message", T: WelcomeEmail },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateWelcomeEmailRequest {
    return new CreateWelcomeEmailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateWelcomeEmailRequest {
    return new CreateWelcomeEmailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateWelcomeEmailRequest {
    return new CreateWelcomeEmailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateWelcomeEmailRequest | PlainMessage<CreateWelcomeEmailRequest> | undefined, b: CreateWelcomeEmailRequest | PlainMessage<CreateWelcomeEmailRequest> | undefined): boolean {
    return proto3.util.equals(CreateWelcomeEmailRequest, a, b);
  }
}

/**
 * @generated from message buf.connect.demo.eliza.v1.CreateWelcomeEmailResponse
 */
export class CreateWelcomeEmailResponse extends Message<CreateWelcomeEmailResponse> {
  /**
   * @generated from field: string html = 1;
   */
  html = "";

  constructor(data?: PartialMessage<CreateWelcomeEmailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.connect.demo.eliza.v1.CreateWelcomeEmailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "html", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateWelcomeEmailResponse {
    return new CreateWelcomeEmailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateWelcomeEmailResponse {
    return new CreateWelcomeEmailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateWelcomeEmailResponse {
    return new CreateWelcomeEmailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateWelcomeEmailResponse | PlainMessage<CreateWelcomeEmailResponse> | undefined, b: CreateWelcomeEmailResponse | PlainMessage<CreateWelcomeEmailResponse> | undefined): boolean {
    return proto3.util.equals(CreateWelcomeEmailResponse, a, b);
  }
}

/**
 * @generated from message buf.connect.demo.eliza.v1.Tag
 */
export class Tag extends Message<Tag> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string value = 2;
   */
  value = "";

  constructor(data?: PartialMessage<Tag>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.connect.demo.eliza.v1.Tag";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Tag {
    return new Tag().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Tag {
    return new Tag().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Tag {
    return new Tag().fromJsonString(jsonString, options);
  }

  static equals(a: Tag | PlainMessage<Tag> | undefined, b: Tag | PlainMessage<Tag> | undefined): boolean {
    return proto3.util.equals(Tag, a, b);
  }
}

/**
 * @generated from message buf.connect.demo.eliza.v1.EmailOptions
 */
export class EmailOptions extends Message<EmailOptions> {
  /**
   * @generated from field: repeated string to = 1;
   */
  to: string[] = [];

  /**
   * @generated from field: string subject = 2;
   */
  subject = "";

  /**
   * @generated from field: string from = 3;
   */
  from = "";

  /**
   * @generated from field: repeated string cc = 4;
   */
  cc: string[] = [];

  /**
   * @generated from field: repeated string bcc = 5;
   */
  bcc: string[] = [];

  /**
   * @generated from field: repeated buf.connect.demo.eliza.v1.Tag tags = 6;
   */
  tags: Tag[] = [];

  constructor(data?: PartialMessage<EmailOptions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.connect.demo.eliza.v1.EmailOptions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "to", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "cc", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "bcc", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "tags", kind: "message", T: Tag, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EmailOptions {
    return new EmailOptions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EmailOptions {
    return new EmailOptions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EmailOptions {
    return new EmailOptions().fromJsonString(jsonString, options);
  }

  static equals(a: EmailOptions | PlainMessage<EmailOptions> | undefined, b: EmailOptions | PlainMessage<EmailOptions> | undefined): boolean {
    return proto3.util.equals(EmailOptions, a, b);
  }
}

/**
 * @generated from message buf.connect.demo.eliza.v1.SendWelcomeEmailRequest
 */
export class SendWelcomeEmailRequest extends Message<SendWelcomeEmailRequest> {
  /**
   * @generated from field: buf.connect.demo.eliza.v1.EmailOptions options = 1;
   */
  options?: EmailOptions;

  /**
   * @generated from field: buf.connect.demo.eliza.v1.WelcomeEmail args = 2;
   */
  args?: WelcomeEmail;

  constructor(data?: PartialMessage<SendWelcomeEmailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.connect.demo.eliza.v1.SendWelcomeEmailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "options", kind: "message", T: EmailOptions },
    { no: 2, name: "args", kind: "message", T: WelcomeEmail },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendWelcomeEmailRequest {
    return new SendWelcomeEmailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendWelcomeEmailRequest {
    return new SendWelcomeEmailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendWelcomeEmailRequest {
    return new SendWelcomeEmailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SendWelcomeEmailRequest | PlainMessage<SendWelcomeEmailRequest> | undefined, b: SendWelcomeEmailRequest | PlainMessage<SendWelcomeEmailRequest> | undefined): boolean {
    return proto3.util.equals(SendWelcomeEmailRequest, a, b);
  }
}

/**
 * @generated from message buf.connect.demo.eliza.v1.SendWelcomeEmailResponse
 */
export class SendWelcomeEmailResponse extends Message<SendWelcomeEmailResponse> {
  /**
   * @generated from field: buf.connect.demo.eliza.v1.EmailOptions options = 1;
   */
  options?: EmailOptions;

  constructor(data?: PartialMessage<SendWelcomeEmailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.connect.demo.eliza.v1.SendWelcomeEmailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "options", kind: "message", T: EmailOptions },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendWelcomeEmailResponse {
    return new SendWelcomeEmailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendWelcomeEmailResponse {
    return new SendWelcomeEmailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendWelcomeEmailResponse {
    return new SendWelcomeEmailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SendWelcomeEmailResponse | PlainMessage<SendWelcomeEmailResponse> | undefined, b: SendWelcomeEmailResponse | PlainMessage<SendWelcomeEmailResponse> | undefined): boolean {
    return proto3.util.equals(SendWelcomeEmailResponse, a, b);
  }
}

/**
 * @generated from message buf.connect.demo.eliza.v1.ReviewEmail
 */
export class ReviewEmail extends Message<ReviewEmail> {
  /**
   * @generated from field: string author_name = 1;
   */
  authorName = "";

  /**
   * @generated from field: string review_text = 2;
   */
  reviewText = "";

  constructor(data?: PartialMessage<ReviewEmail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.connect.demo.eliza.v1.ReviewEmail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "author_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "review_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReviewEmail {
    return new ReviewEmail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReviewEmail {
    return new ReviewEmail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReviewEmail {
    return new ReviewEmail().fromJsonString(jsonString, options);
  }

  static equals(a: ReviewEmail | PlainMessage<ReviewEmail> | undefined, b: ReviewEmail | PlainMessage<ReviewEmail> | undefined): boolean {
    return proto3.util.equals(ReviewEmail, a, b);
  }
}

/**
 * @generated from message buf.connect.demo.eliza.v1.SendReviewEmailRequest
 */
export class SendReviewEmailRequest extends Message<SendReviewEmailRequest> {
  /**
   * @generated from field: buf.connect.demo.eliza.v1.EmailOptions options = 1;
   */
  options?: EmailOptions;

  /**
   * @generated from field: buf.connect.demo.eliza.v1.ReviewEmail args = 2;
   */
  args?: ReviewEmail;

  constructor(data?: PartialMessage<SendReviewEmailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.connect.demo.eliza.v1.SendReviewEmailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "options", kind: "message", T: EmailOptions },
    { no: 2, name: "args", kind: "message", T: ReviewEmail },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendReviewEmailRequest {
    return new SendReviewEmailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendReviewEmailRequest {
    return new SendReviewEmailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendReviewEmailRequest {
    return new SendReviewEmailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SendReviewEmailRequest | PlainMessage<SendReviewEmailRequest> | undefined, b: SendReviewEmailRequest | PlainMessage<SendReviewEmailRequest> | undefined): boolean {
    return proto3.util.equals(SendReviewEmailRequest, a, b);
  }
}

/**
 * @generated from message buf.connect.demo.eliza.v1.SendReviewEmailResponse
 */
export class SendReviewEmailResponse extends Message<SendReviewEmailResponse> {
  constructor(data?: PartialMessage<SendReviewEmailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.connect.demo.eliza.v1.SendReviewEmailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendReviewEmailResponse {
    return new SendReviewEmailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendReviewEmailResponse {
    return new SendReviewEmailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendReviewEmailResponse {
    return new SendReviewEmailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SendReviewEmailResponse | PlainMessage<SendReviewEmailResponse> | undefined, b: SendReviewEmailResponse | PlainMessage<SendReviewEmailResponse> | undefined): boolean {
    return proto3.util.equals(SendReviewEmailResponse, a, b);
  }
}

/**
 * @generated from message buf.connect.demo.eliza.v1.ReceiptEmail
 */
export class ReceiptEmail extends Message<ReceiptEmail> {
  constructor(data?: PartialMessage<ReceiptEmail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.connect.demo.eliza.v1.ReceiptEmail";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReceiptEmail {
    return new ReceiptEmail().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReceiptEmail {
    return new ReceiptEmail().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReceiptEmail {
    return new ReceiptEmail().fromJsonString(jsonString, options);
  }

  static equals(a: ReceiptEmail | PlainMessage<ReceiptEmail> | undefined, b: ReceiptEmail | PlainMessage<ReceiptEmail> | undefined): boolean {
    return proto3.util.equals(ReceiptEmail, a, b);
  }
}

/**
 * @generated from message buf.connect.demo.eliza.v1.SendReceiptEmailRequest
 */
export class SendReceiptEmailRequest extends Message<SendReceiptEmailRequest> {
  /**
   * @generated from field: buf.connect.demo.eliza.v1.EmailOptions options = 1;
   */
  options?: EmailOptions;

  /**
   * @generated from field: buf.connect.demo.eliza.v1.ReceiptEmail args = 2;
   */
  args?: ReceiptEmail;

  constructor(data?: PartialMessage<SendReceiptEmailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.connect.demo.eliza.v1.SendReceiptEmailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "options", kind: "message", T: EmailOptions },
    { no: 2, name: "args", kind: "message", T: ReceiptEmail },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendReceiptEmailRequest {
    return new SendReceiptEmailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendReceiptEmailRequest {
    return new SendReceiptEmailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendReceiptEmailRequest {
    return new SendReceiptEmailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SendReceiptEmailRequest | PlainMessage<SendReceiptEmailRequest> | undefined, b: SendReceiptEmailRequest | PlainMessage<SendReceiptEmailRequest> | undefined): boolean {
    return proto3.util.equals(SendReceiptEmailRequest, a, b);
  }
}

/**
 * @generated from message buf.connect.demo.eliza.v1.SendReceiptEmailResponse
 */
export class SendReceiptEmailResponse extends Message<SendReceiptEmailResponse> {
  constructor(data?: PartialMessage<SendReceiptEmailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.connect.demo.eliza.v1.SendReceiptEmailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendReceiptEmailResponse {
    return new SendReceiptEmailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendReceiptEmailResponse {
    return new SendReceiptEmailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendReceiptEmailResponse {
    return new SendReceiptEmailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SendReceiptEmailResponse | PlainMessage<SendReceiptEmailResponse> | undefined, b: SendReceiptEmailResponse | PlainMessage<SendReceiptEmailResponse> | undefined): boolean {
    return proto3.util.equals(SendReceiptEmailResponse, a, b);
  }
}

