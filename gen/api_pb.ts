// @generated by protoc-gen-es v1.2.1 with parameter "target=ts"
// @generated from file api.proto (package buf.connect.demo.eliza.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message buf.connect.demo.eliza.v1.CreateWelcomeEmailRequest
 */
export class CreateWelcomeEmailRequest extends Message<CreateWelcomeEmailRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<CreateWelcomeEmailRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.connect.demo.eliza.v1.CreateWelcomeEmailRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateWelcomeEmailRequest {
    return new CreateWelcomeEmailRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateWelcomeEmailRequest {
    return new CreateWelcomeEmailRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateWelcomeEmailRequest {
    return new CreateWelcomeEmailRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateWelcomeEmailRequest | PlainMessage<CreateWelcomeEmailRequest> | undefined, b: CreateWelcomeEmailRequest | PlainMessage<CreateWelcomeEmailRequest> | undefined): boolean {
    return proto3.util.equals(CreateWelcomeEmailRequest, a, b);
  }
}

/**
 * @generated from message buf.connect.demo.eliza.v1.CreateWelcomeEmailResponse
 */
export class CreateWelcomeEmailResponse extends Message<CreateWelcomeEmailResponse> {
  /**
   * @generated from field: string html = 1;
   */
  html = "";

  constructor(data?: PartialMessage<CreateWelcomeEmailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.connect.demo.eliza.v1.CreateWelcomeEmailResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "html", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateWelcomeEmailResponse {
    return new CreateWelcomeEmailResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateWelcomeEmailResponse {
    return new CreateWelcomeEmailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateWelcomeEmailResponse {
    return new CreateWelcomeEmailResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateWelcomeEmailResponse | PlainMessage<CreateWelcomeEmailResponse> | undefined, b: CreateWelcomeEmailResponse | PlainMessage<CreateWelcomeEmailResponse> | undefined): boolean {
    return proto3.util.equals(CreateWelcomeEmailResponse, a, b);
  }
}

